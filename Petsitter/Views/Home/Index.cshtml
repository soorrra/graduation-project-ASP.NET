@model IEnumerable<Petsitter.ViewModels.SitterVM>


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js"></script>


@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer


<div class="wrapper">

    <div class="big__pet">
        <img class="img__huge__animal" src="/Images/big__kitty.png" alt="location picture">
    </div>

    <div class="storeTitle">
            <div class="text-start">
                <h1 class="h1-pet">
                @Localizer["My pet is a ..."]
                </h1>
                <div class="btn-wrapper">
                    <button type="submit" class="btnPetMainPage">cat</button>
                </div>
            </div>
           

    </div>

    <div class="eyes">
        <div class="eye">
            <div class="ball"></div>
        </div>

        <div class="eye">
            <div class="ball"></div>
        </div>
    </div>

    <img class="PetSittersPic" src="~/Images/PetSittersPic.png" alt="location picture">

    <div class="backHowItWorks">
         <div class="howItWorks">
            <h1 class="howItWorksText">@Localizer["How it works"]</h1>
            <div class="p-wrapper">
                <p class="howItWorksP">
                    @Localizer["PetSitters was created"]
                    </p>
            </div>

        </div>
    </div>
    <div class="slider__wrapper">
        <div class="vertical-slider">
            <div class="slide vertical-slide">
                <div class="slide-content">
                        <p class="slide__num">
                            01
                        </p>
                        <p class="slide__text">
                             @Localizer["Register for an account"]</br></br>
                             @Localizer["Pet sitter or pet parent, you first need an account! Sign up mow!"]
                        </p>
                </div>
            </div>
            <div class="slide vertical-slide">
                <div class="slide-content">
                    <p class="slide__num">
                        02
                    </p>
                    <p class="slide__text">
                        @Localizer["Local pet sitters near you"]</br></br>
                        @Localizer["With a quickly growing community, you'll find what you need"]
                    </p>
                </div>
            </div>
            <div class="slide vertical-slide">
                <div class="slide-content">
                    <p class="slide__num">
                        03
                    </p>
                    <p class="slide__text">
                        @Localizer["Hire on your own terms"]</br></br>
                        @Localizer["Choose a pet sitter who fits your schedule and pay them directly"]
                    </p>
                </div>
            </div>
            <div class="slide vertical-slide">
                <div class="slide-content">
                    <p class="slide__num">
                        04
                    </p>
                    <p class="slide__text">
                        @Localizer["Personalized pet sittting"]</br></br>
                        @Localizer["Contact your chosen pet sitter and personalize your pet's experience"]
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div class="box box1"></div>
    <div class="box box2"></div>
    <div class="box box3"></div>
    <div class="box box4"></div>
    <div class="box box5"></div>
    <div class="box box6"></div>
    <div class="service__wrapper">
        <div class="service__content">
            <p class="service__text">
                @Localizer["What type of service do you need?"]
            </p>
            <button class="btnServiceType" onclick="startAnimation()">Care</button>

        </div>
    </div>

    <div class="found__wrapper">
        <div class="found__content">
            <p class="service__text">@Localizer["We have found a sitter for your pet!"]</p>
        </div>
        <div class="found__sitters__wrapper">
            <div id="column-1"></div>
            <div id="column-2"></div>
            <div id="column-3"></div>
            @if (Model.Any())
            {
                @foreach (var item in Model.Where(s => s.SitterId != 1))
                {
                    <div class="card">
                        <div class="card__body">
                          
                                @if (item.ProfileImage != null)
                                {
                                    <img src="data:image/png;base64, @Convert.ToBase64String(item.ProfileImage)" class="card__image" alt="@Html.DisplayFor(modelItem => item.FirstName) Profile Image" />
                                }
                            <div class="card__head">
                                <h5 class="card__title">@Html.DisplayFor(modelItem => item.FirstName)</h5>
                                <small class="text-muted">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= item.AvgRating)
                                        {
                                            <i class="fas fa-star text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="far fa-star"></i>
                                        }
                                    }
                                </small>
                            </div>
                            <div class="card__footer">
                                <div class="card__tags">
                                    @foreach (var petType in item.petTypes)
                                    {
                                        if (petType != null)
                                        {
                                            <span class="card__tag">@petType</span>
                                        }
                                    }
                                    @if (item.serviceTypes != null)
                                    {
                                        foreach (var serviceType in item.serviceTypes)
                                        {
                                            if (serviceType != null)
                                            {
                                                <span class="card__tag">@serviceType</span>
                                            }
                                        }
                                    }
                                </div>
                                <div class="more-info-link">
                                    <a asp-controller="Booking" asp-action="SitterDetails" asp-route-sitterID="@item.SitterId">
                                        <button class="card__btn">@Localizer["View profile"]</button>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            }
            else
            {
                <p>@Localizer["No sitters found"]</p>
            }
        </div>
    </div>

    <div class="back__pre_footer">
        <div class="pre_footer">
            <h1 class="howItWorksText">@Localizer["Let's start!"]</h1>
                <div class="p-wrapper">
                    <div class="btn-wrapper">
                    <a class="find__sitter__btn" asp-area="" asp-controller="Booking" asp-action="FindASitter">@Localizer["Find a pet sitter"]</a>
                    </div>
                </div>
        </div>
    </div>
    
</div>

<script>
    let currentImageIndex = 0;
    const images1 = ['/Images/img_walking_1.png', '/Images/img_walking_2.png', '/Images/img_walking_3.png', '/Images/img_walking_4.png', '/Images/img_walking_5.png', '/Images/img_walking_6.png'];
    const images2 = ['/Images/lapka1.png', '/Images/lapka2.png', '/Images/lapka3.png'];

    function startAnimation() {
        const boxes = document.querySelectorAll(".box");

        boxes.forEach(function (box) {
            box.classList.remove("animate");
            if (currentImageIndex === 0) {
                box.style.backgroundImage = "url(" + images1[parseInt(box.classList.item(1).slice(-1)) - 1] + ")";
            } else {
                box.style.backgroundImage = "url(" + images2[parseInt(box.classList.item(1).slice(-1)) - 1] + ")";
            }
            box.offsetWidth;
            box.classList.add("animate");
        });

        currentImageIndex = (currentImageIndex + 1) % 2;
    }

    const btnServiceType = document.querySelector('.btnServiceType');
    const serviceNames = ['Care', 'Walking', 'Training', 'Grooming'];
    let currentServiceIndex = 0;

    btnServiceType.addEventListener('click', () => {
        currentServiceIndex = (currentServiceIndex + 1) % serviceNames.length;
        btnServiceType.textContent = serviceNames[currentServiceIndex];
    });





    var balls = document.getElementsByClassName("ball");
    document.onmousemove = function () {
        var x = event.clientX * 100 / window.innerWidth + "%";
        var y = event.clientY * 100 / window.innerHeight + "%";
        //event.clientX => get the horizontal coordinate of the mouse
        //event.clientY => get the Vertical coordinate of the mouse
        //window.innerWidth => get the browser width
        //window.innerHeight => get the browser height

        for (var i = 0; i < 2; i++) {
            balls[i].style.left = x;
            balls[i].style.top = y;
            balls[i].style.transform = "translate(-" + x + ",-" + y + ")";
        }
    }
</script>

<script>
    $(function () {
        var cards = $(".found__sitters__wrapper .card");
        var column1 = $("#column-1");
        var column2 = $("#column-2");
        var column3 = $("#column-3");

        for (var i = 0; i < cards.length; i++) {
            if (i % 3 == 0) {
                column1.append(cards[i]);
            } else if (i % 3 == 1) {
                column2.append(cards[i]);
            } else {
                column3.append(cards[i]);
            }
        }
    });

    const btnPetMainPage = document.querySelector('.btnPetMainPage');
    const petNames = ['cat', 'dog', 'friend'];
    let currentPetIndex = 0;

    btnPetMainPage.addEventListener('click', () => {
        currentPetIndex = (currentPetIndex + 1) % petNames.length;
        btnPetMainPage.textContent = petNames[currentPetIndex];
    });

</script>

<script>
    (function ($) {
        $(function () {
            $('.vertical-slider').slick({
                arrows: false,
                dots: false,
                edgeFriction: .5,
                infinite: false,
                vertical: true,
                verticalSwiping: true,
            });

            $('.vertical-slider').mousewheel(function (e) {
                if (e.deltaY < 0) {
                    if ($(this).slick('slickCurrentSlide') == $(this).find('.slide').length - 1) {
                        return
                    }

                    e.preventDefault()
                    $(this).slick('slickNext')
                } else {
                    if ($(this).slick('slickCurrentSlide') == 0) {
                        return
                    }

                    e.preventDefault()
                    $(this).slick('slickPrev')
                }
            });
        });
    }(jQuery));
    
</script>
