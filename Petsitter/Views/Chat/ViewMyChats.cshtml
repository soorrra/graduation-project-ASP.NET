@model IEnumerable<Petsitter.ViewModels.MessageVM>
@{

    IEnumerable<Chat> chats = ViewData["ChatLists"] as IEnumerable<Chat>;
    var currUser = ViewData["CurrUser"];
}
<table class="table">
    @if (chats.Count() == 0)
    {
        <p class="lead">You have no chats</p>
    }
    else
    {
        <tr>
            <th>Name</th>
        </tr>
        @foreach (Chat chat in chats)
        {
            <tr class="pet-lists">
                <td class="d-flex justify-content-between lead">
                    <div>
                        @if (currUser == chat.User1)
                        {
                            <p class="lead">@chat.User2.FirstName</p>
                            @if (chat.User2.ProfileImage != null)
                            {
                                <a asp-controller="Chat" asp-action="ChatFromMyChats" asp-route-userID="@chat.User2.UserId">
                                    <img src="data:image/png;base64, @Convert.ToBase64String(chat.User2.ProfileImage)" alt="@Html.DisplayFor(modelItem => chat.User2.FirstName) Profile Image" style="width: 50px; height: 50px; border-radius: 9999px" />
                                </a>
                            }
                        }
                        else
                        {
                            <p class="lead">@chat.User1.FirstName</p>
                            @if (chat.User1.ProfileImage != null)
                            {
                                <a asp-controller="Chat" asp-action="ChatFromMyChats" asp-route-userID="@chat.User1.UserId">
                                    <img src="data:image/png;base64, @Convert.ToBase64String(chat.User1.ProfileImage)" alt="@Html.DisplayFor(modelItem => chat.User1.FirstName) Profile Image" style="width: 50px; height: 50px; border-radius: 9999px" />
                                </a>
                            }
                        }
                    </div>
                </td>
            </tr>
        }
    }
</table>
